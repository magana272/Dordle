{"ast":null,"code":"var _jsxFileName = \"/Users/magana272/Desktop/wordle/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react'; // import DangerButton from \"./Component/DangerButton\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Welcome(props) {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"Hello, \", props.name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Welcome;\n\nfunction guessing(word) {\n  if (word == \"xxxxx\") {\n    return \"Daisy\";\n  }\n\n  return \"xxxxx\";\n}\n\nfunction App() {\n  _s();\n\n  const [guess, setguess] = useState(\"xxxxx\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setguess(guessing(guess)),\n        children: guess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wT6uZ5Qan9dlIjCuSQLkN26TiNk=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Welcome\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["logo","React","useState","Welcome","props","name","guessing","word","App","guess","setguess"],"sources":["/Users/magana272/Desktop/wordle/my-app/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\n// import DangerButton from \"./Component/DangerButton\"\nfunction Welcome(props) {\n  return <h1>Hello, {props.name}</h1>;\n}\n\nfunction guessing(word){\n  if (word == \"xxxxx\"){\n    return \"Daisy\"}\n  return \"xxxxx\";\n}\nfunction App() {\n  const [guess, setguess] = useState(\"xxxxx\")\n  return (\n    <div className=\"App\">\n      <header>\n      <button onClick={()=>setguess(guessing(guess))} >{guess}</button>\n      </header>\n    </div>\n    \n  );\n}\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EACtB,oBAAO;IAAA,sBAAYA,KAAK,CAACC,IAAlB;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACD;;KAFQF,O;;AAIT,SAASG,QAAT,CAAkBC,IAAlB,EAAuB;EACrB,IAAIA,IAAI,IAAI,OAAZ,EAAoB;IAClB,OAAO,OAAP;EAAe;;EACjB,OAAO,OAAP;AACD;;AACD,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,OAAD,CAAlC;EACA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE;MAAA,uBACA;QAAQ,OAAO,EAAE,MAAIQ,QAAQ,CAACJ,QAAQ,CAACG,KAAD,CAAT,CAA7B;QAAA,UAAkDA;MAAlD;QAAA;QAAA;QAAA;MAAA;IADA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GAVQD,G;;MAAAA,G;AAWT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}