{"ast":null,"code":"import _objectSpread from \"/Users/magana272/Desktop/pp/wordle/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/magana272/Desktop/pp/wordle/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/magana272/Desktop/pp/wordle/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/magana272/Desktop/pp/wordle/my-app/src/App.js\";\nimport './App.css';\nimport Board from \"./Component/Board\";\nimport React, { useState, createContext, useEffect } from 'react';\nimport Keyboard from \"./Component/KeyBoard\";\nimport { DefaultBorad, guessing, get_randomWord } from \"./Word\";\nexport var AppContext = createContext();\n\nfunction App() {\n  var _useState = useState(\"xxxxx\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      guess = _useState2[0],\n      setguess = _useState2[1];\n\n  var _useState3 = useState(DefaultBorad),\n      _useState4 = _slicedToArray(_useState3, 2),\n      board = _useState4[0],\n      setBoard = _useState4[1];\n\n  var _useState5 = useState({\n    attempt: 0,\n    letterPos: 0\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      curAttempt = _useState6[0],\n      setCurrAttempt = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      word = _useState8[0],\n      setWord = _useState8[1];\n\n  var _useState9 = useState(new Set()),\n      _useState10 = _slicedToArray(_useState9, 2),\n      wordSet = _useState10[0],\n      setWordSet = _useState10[1];\n\n  useEffect(function () {\n    get_randomWord().then(function (words) {\n      setWordSet(words.wordSet);\n      var items = Array.from(words.wordSet);\n      setWord(items[Math.floor(Math.random() * items.length)]);\n    });\n  }, []);\n\n  var onDelete = function onDelete(keyValue) {\n    var newBoard = _toConsumableArray(board);\n\n    if (curAttempt.letterPos == 0) {\n      newBoard[curAttempt.attempt][curAttempt.letterPos] = \"\";\n      setCurrAttempt(_objectSpread({}, curAttempt, {\n        letterPos: curAttempt.letterPos\n      }));\n      setBoard(newBoard);\n    } else if (curAttempt.letterPos > 0 && curAttempt.letterPos <= 5) {\n      //Deleteing any other time\n      newBoard[curAttempt.attempt][curAttempt.letterPos - 1] = \"\";\n      setCurrAttempt(_objectSpread({}, curAttempt, {\n        letterPos: curAttempt.letterPos - 1\n      }));\n      setBoard(newBoard);\n    }\n  };\n\n  var onEnter = function onEnter(keyValue) {\n    var newBoard = _toConsumableArray(board);\n\n    if (curAttempt.letterPos != 5) {\n      // Not a complete word\n      return;\n    } else if (curAttempt.letterPos == 5) {\n      // Makeing a guess\n      setCurrAttempt({\n        attempt: curAttempt.attempt + 1,\n        letterPos: 0\n      });\n      onCheck();\n      return; // need to check the guess \n    } else if (keyValue != \"Enter\" && curAttempt.letterPos == 5) {\n      // Fully Spelt Word\n      return;\n    }\n  };\n\n  var onSelectLetter = function onSelectLetter(keyValue) {\n    var newBoard = _toConsumableArray(board);\n\n    if (curAttempt.letterPos >= 0 && curAttempt.letterPos <= 4) {\n      setCurrAttempt(_objectSpread({}, curAttempt, {\n        letterPos: curAttempt.letterPos + 1\n      }));\n      newBoard[curAttempt.attempt][curAttempt.letterPos] = keyValue;\n      setBoard(newBoard);\n      return;\n    }\n  };\n\n  var onCheck = function onCheck() {\n    var newBoard = _toConsumableArray(board);\n\n    if (newBoard[curAttempt.attempt].join(\"\").valueOf() === word.valueOf()) {\n      alert(\"YOU WIN!\");\n      setBoard(DefaultBorad);\n      setCurrAttempt({\n        attempt: 0,\n        letterPos: 0\n      });\n      setWord(wordSet[Math.floor(Math.random() * wordSet.length)]);\n    } else if (curAttempt.attempt) {}\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 16\n    }\n  }, \"Dordle\")), /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      board: board,\n      setBoard: setBoard,\n      curAttempt: curAttempt,\n      setCurrAttempt: setCurrAttempt,\n      word: word,\n      setWord: setWord,\n      onDelete: onDelete,\n      onEnter: onEnter,\n      onSelectLetter: onSelectLetter,\n      onCheck: onCheck\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Board, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Keyboard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setguess(guessing(guess));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, guess)));\n}\n\nexport default App;","map":{"version":3,"names":["Board","React","useState","createContext","useEffect","Keyboard","DefaultBorad","guessing","get_randomWord","AppContext","App","guess","setguess","board","setBoard","attempt","letterPos","curAttempt","setCurrAttempt","word","setWord","Set","wordSet","setWordSet","then","words","items","Array","from","Math","floor","random","length","onDelete","keyValue","newBoard","onEnter","onCheck","onSelectLetter","join","valueOf","alert"],"sources":["/Users/magana272/Desktop/pp/wordle/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport Board from \"./Component/Board\";\nimport React, { useState, createContext, useEffect } from 'react';\nimport Keyboard from \"./Component/KeyBoard\";\nimport {DefaultBorad, guessing, get_randomWord } from \"./Word\"\nexport const AppContext = createContext();\nfunction App() {\n  const [guess, setguess] = useState(\"xxxxx\");\n  const [board, setBoard] = useState(DefaultBorad);\n  const [curAttempt, setCurrAttempt] = useState({attempt:0 ,letterPos :0})\n  const [word, setWord] = useState(\"\");\n  const [wordSet, setWordSet] = useState(new Set());\n\n  useEffect(() => {\n    get_randomWord().then((words)=> {\n      setWordSet(words.wordSet)\n      let items = Array.from(words.wordSet)\n      setWord(items [Math.floor(Math.random() * items.length)])\n    }\n    )\n  }, [])\n  const onDelete = (keyValue) =>{\n    const newBoard = [...board]\n    if(curAttempt.letterPos ==0 ){\n      newBoard[curAttempt.attempt][curAttempt.letterPos] = \"\"\n      setCurrAttempt({...curAttempt, letterPos:curAttempt.letterPos});\n      setBoard(newBoard);}\n    else if(curAttempt.letterPos >0 && curAttempt.letterPos <=5){\n      //Deleteing any other time\n      newBoard[curAttempt.attempt][curAttempt.letterPos-1] = \"\"\n      setCurrAttempt({...curAttempt, letterPos:curAttempt.letterPos-1});\n        setBoard(newBoard);\n      }\n      }\n  const onEnter = (keyValue) => {\n    const newBoard = [...board];\n    if(curAttempt.letterPos!=5){\n      // Not a complete word\n      return;\n    }\n    else if(curAttempt.letterPos==5){\n      // Makeing a guess\n      setCurrAttempt({attempt: curAttempt.attempt+1, letterPos:0});\n      onCheck();\n      return;\n      // need to check the guess \n    }\n     else if (keyValue != \"Enter\" && curAttempt.letterPos==5){\n      // Fully Spelt Word\n      return;\n\n    }\n  }\n  const onSelectLetter = (keyValue) =>{\n    const newBoard = [...board]\n    if(curAttempt.letterPos >=0 && curAttempt.letterPos <=4){\n      setCurrAttempt({...curAttempt, letterPos:curAttempt.letterPos+1})\n      newBoard[curAttempt.attempt][curAttempt.letterPos] = keyValue;\n      setBoard(newBoard)\n      return;\n  }}\n  const onCheck = () =>{\n    const newBoard = [...board]\n    if(newBoard[curAttempt.attempt].join(\"\").valueOf() === word.valueOf()){\n      alert(\"YOU WIN!\")\n      setBoard(DefaultBorad);\n      setCurrAttempt({attempt:0 ,letterPos:0 })\n      setWord(wordSet[Math.floor(Math.random() * wordSet.length)]);\n    }\n    else if(curAttempt.attempt){\n\n    }\n    \n  }\n  return (\n      <div className=\"App\">\n      <div className = \"container-fluid\"> \n          <nav><h1>Dordle</h1></nav>\n          <AppContext.Provider value ={{board, setBoard, curAttempt, setCurrAttempt, word, setWord, onDelete, onEnter, onSelectLetter, onCheck}} >\n            <div className = \"col\"> \n            <div className = \"container-fluid\"> \n              <div className =\"game\">\n                <div className = \"row justify-content-center\"> \n                <div className = \"container-fluid\"> \n                  <Board/>\n                </div>\n                </div>\n                <div className = \"row justify-content-center\"> \n                <div className = \"container-fluid\">\n                  <Keyboard/>\n                  </div>\n                </div>\n              </div>\n              </div>\n            </div>\n          </AppContext.Provider>\n          <button onClick={()=>setguess(guessing(guess))} >{guess}</button>\n\n      </div>\n      \n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}