{"ast":null,"code":"var _jsxFileName = \"/Users/magana272/Desktop/wordle/my-app/src/Component/Letter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { AppContext } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Letter(_ref) {\n  _s();\n\n  let {\n    letterPos,\n    attemptValue\n  } = _ref;\n  const {\n    board,\n    curAttempt,\n    word\n  } = useContext(AppContext);\n  const letter = board[attemptValue][letterPos];\n  console.log(attemptValue <= curAttempt.attempt);\n  console.log(word.word);\n  console.log(word.word.includes({\n    letter\n  }));\n  console.log(letter);\n\n  if (attemptValue <= curAttempt.attempt && word.word.includes({\n    letter\n  })) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"letter\",\n      id: \"correct\",\n      children: [\" \", letter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"letter\",\n    id: \"error\",\n    children: [\" \", letter]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Letter, \"bHCMX5JPU9I8mE+3bxryP1hVHps=\");\n\n_c = Letter;\nexport default Letter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Letter\");","map":{"version":3,"names":["React","useContext","AppContext","Letter","letterPos","attemptValue","board","curAttempt","word","letter","console","log","attempt","includes"],"sources":["/Users/magana272/Desktop/wordle/my-app/src/Component/Letter.js"],"sourcesContent":["import React, {useContext} from 'react';\nimport {AppContext} from \"../App\";\nfunction Letter({letterPos, attemptValue}){\n    const {board, curAttempt, word} = useContext(AppContext); \n    const letter = board[attemptValue][letterPos];\n    console.log(attemptValue<= curAttempt.attempt);\n    console.log(word.word)\n    console.log(word.word.includes({letter}));\n    console.log(letter)\n    if((attemptValue<= curAttempt.attempt) && (word.word.includes({letter}))){\n        return <div className =\"letter\" id= \"correct\"> {letter}</div>\n    }\n    return <div className =\"letter\" id= \"error\"> {letter}</div>\n\n}\nexport default Letter;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,UAAR,QAAyB,QAAzB;;;AACA,SAASC,MAAT,OAA0C;EAAA;;EAAA,IAA1B;IAACC,SAAD;IAAYC;EAAZ,CAA0B;EACtC,MAAM;IAACC,KAAD;IAAQC,UAAR;IAAoBC;EAApB,IAA4BP,UAAU,CAACC,UAAD,CAA5C;EACA,MAAMO,MAAM,GAAGH,KAAK,CAACD,YAAD,CAAL,CAAoBD,SAApB,CAAf;EACAM,OAAO,CAACC,GAAR,CAAYN,YAAY,IAAGE,UAAU,CAACK,OAAtC;EACAF,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACA,IAAjB;EACAE,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACA,IAAL,CAAUK,QAAV,CAAmB;IAACJ;EAAD,CAAnB,CAAZ;EACAC,OAAO,CAACC,GAAR,CAAYF,MAAZ;;EACA,IAAIJ,YAAY,IAAGE,UAAU,CAACK,OAA3B,IAAwCJ,IAAI,CAACA,IAAL,CAAUK,QAAV,CAAmB;IAACJ;EAAD,CAAnB,CAA3C,EAAyE;IACrE,oBAAO;MAAK,SAAS,EAAE,QAAhB;MAAyB,EAAE,EAAE,SAA7B;MAAA,gBAAyCA,MAAzC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EACD,oBAAO;IAAK,SAAS,EAAE,QAAhB;IAAyB,EAAE,EAAE,OAA7B;IAAA,gBAAuCA,MAAvC;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAEH;;GAZQN,M;;KAAAA,M;AAaT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}