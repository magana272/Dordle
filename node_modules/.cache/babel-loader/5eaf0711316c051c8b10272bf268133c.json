{"ast":null,"code":"var _jsxFileName = \"/Users/magana272/Desktop/wordle/my-app/src/Component/Letter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { AppContext } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Letter(_ref) {\n  _s();\n\n  let {\n    letterPos,\n    attemptValue\n  } = _ref;\n  const {\n    board,\n    curAttempt,\n    word,\n    correct,\n    almost,\n    error,\n    setCorrect,\n    setAlmost,\n    setError\n  } = useContext(AppContext);\n  const letter = board[attemptValue][letterPos];\n\n  if (attemptValue < curAttempt.attempt) {\n    if (word.word[letterPos] === letter) {\n      if (new Set(almost.has(letter))) {\n        setAlmost(new Set([...almost].filter(x => x !== letter)));\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"letter\",\n        id: \"correct\",\n        children: [\" \", letter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 20\n      }, this);\n    } else if (word.word.slice(letterPos).includes(\"\" + letter)) {\n      setAlmost(almost => new Set.add(almost).add(letter));\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"letter\",\n        id: \"almost\",\n        children: [\" \", letter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 20\n      }, this);\n    } else {\n      setError(error => new Set.add(error).add(letter));\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"letter\",\n        id: \"error\",\n        children: [\" \", letter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"letter\",\n    id: true,\n    children: [\" \", letter]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Letter, \"gmoth0xvfvRoWcvaP+LO3RauMU0=\");\n\n_c = Letter;\nexport default Letter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Letter\");","map":{"version":3,"names":["React","useContext","AppContext","Letter","letterPos","attemptValue","board","curAttempt","word","correct","almost","error","setCorrect","setAlmost","setError","letter","attempt","Set","has","filter","x","slice","includes","add"],"sources":["/Users/magana272/Desktop/wordle/my-app/src/Component/Letter.js"],"sourcesContent":["import React, {useContext} from 'react';\nimport {AppContext} from \"../App\";\nfunction Letter({letterPos, attemptValue}){\n    const {board, curAttempt, word, correct, almost, error, setCorrect,setAlmost,setError} = useContext(AppContext); \n    const letter = board[attemptValue][letterPos];\n\n\n    if(attemptValue < curAttempt.attempt){\n        if(word.word[letterPos]===letter){\n            if(new Set(almost.has(letter))){\n                setAlmost(new Set([...almost].filter(x => x !== letter)))\n            }\n            return <div className =\"letter\" id= \"correct\"> {letter}</div>\n        }\n        else if(word.word.slice(letterPos).includes(\"\"+letter)){\n            setAlmost(almost => new Set.add(almost).add(letter))\n            return <div className =\"letter\" id= \"almost\"> {letter}</div>\n        }\n        else{\n            setError(error => new Set.add(error).add(letter))\n            return <div className =\"letter\" id= \"error\"> {letter}</div>\n        }\n    }\n    return <div className =\"letter\" id> {letter}</div>\n\n}\nexport default Letter;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,UAAR,QAAyB,QAAzB;;;AACA,SAASC,MAAT,OAA0C;EAAA;;EAAA,IAA1B;IAACC,SAAD;IAAYC;EAAZ,CAA0B;EACtC,MAAM;IAACC,KAAD;IAAQC,UAAR;IAAoBC,IAApB;IAA0BC,OAA1B;IAAmCC,MAAnC;IAA2CC,KAA3C;IAAkDC,UAAlD;IAA6DC,SAA7D;IAAuEC;EAAvE,IAAmFb,UAAU,CAACC,UAAD,CAAnG;EACA,MAAMa,MAAM,GAAGT,KAAK,CAACD,YAAD,CAAL,CAAoBD,SAApB,CAAf;;EAGA,IAAGC,YAAY,GAAGE,UAAU,CAACS,OAA7B,EAAqC;IACjC,IAAGR,IAAI,CAACA,IAAL,CAAUJ,SAAV,MAAuBW,MAA1B,EAAiC;MAC7B,IAAG,IAAIE,GAAJ,CAAQP,MAAM,CAACQ,GAAP,CAAWH,MAAX,CAAR,CAAH,EAA+B;QAC3BF,SAAS,CAAC,IAAII,GAAJ,CAAQ,CAAC,GAAGP,MAAJ,EAAYS,MAAZ,CAAmBC,CAAC,IAAIA,CAAC,KAAKL,MAA9B,CAAR,CAAD,CAAT;MACH;;MACD,oBAAO;QAAK,SAAS,EAAE,QAAhB;QAAyB,EAAE,EAAE,SAA7B;QAAA,gBAAyCA,MAAzC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAP;IACH,CALD,MAMK,IAAGP,IAAI,CAACA,IAAL,CAAUa,KAAV,CAAgBjB,SAAhB,EAA2BkB,QAA3B,CAAoC,KAAGP,MAAvC,CAAH,EAAkD;MACnDF,SAAS,CAACH,MAAM,IAAI,IAAIO,GAAG,CAACM,GAAR,CAAYb,MAAZ,EAAoBa,GAApB,CAAwBR,MAAxB,CAAX,CAAT;MACA,oBAAO;QAAK,SAAS,EAAE,QAAhB;QAAyB,EAAE,EAAE,QAA7B;QAAA,gBAAwCA,MAAxC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAP;IACH,CAHI,MAID;MACAD,QAAQ,CAACH,KAAK,IAAI,IAAIM,GAAG,CAACM,GAAR,CAAYZ,KAAZ,EAAmBY,GAAnB,CAAuBR,MAAvB,CAAV,CAAR;MACA,oBAAO;QAAK,SAAS,EAAE,QAAhB;QAAyB,EAAE,EAAE,OAA7B;QAAA,gBAAuCA,MAAvC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAP;IACH;EACJ;;EACD,oBAAO;IAAK,SAAS,EAAE,QAAhB;IAAyB,EAAE,MAA3B;IAAA,gBAA8BA,MAA9B;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAEH;;GAvBQZ,M;;KAAAA,M;AAwBT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}