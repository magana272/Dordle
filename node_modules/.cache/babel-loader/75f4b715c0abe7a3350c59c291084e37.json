{"ast":null,"code":"import _objectSpread from \"/Users/magana272/Desktop/pp/wordle/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/magana272/Desktop/pp/wordle/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/magana272/Desktop/pp/wordle/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/magana272/Desktop/pp/wordle/my-app/src/App.js\";\nimport './App.css';\nimport Board from \"./Component/Board\";\nimport React, { useState, createContext, useEffect } from 'react';\nimport Keyboard from \"./Component/KeyBoard\";\nimport { DefaultBorad, guessing, get_randomWord } from \"./Word\";\nexport var AppContext = createContext();\n\nfunction App() {\n  var _useState = useState(\"xxxxx\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      guess = _useState2[0],\n      setguess = _useState2[1];\n\n  var _useState3 = useState(DefaultBorad),\n      _useState4 = _slicedToArray(_useState3, 2),\n      board = _useState4[0],\n      setBoard = _useState4[1];\n\n  var _useState5 = useState({\n    attempt: 0,\n    letterPos: 0\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      curAttempt = _useState6[0],\n      setCurrAttempt = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      word = _useState8[0],\n      setWord = _useState8[1];\n\n  var _useState9 = useState(new Set()),\n      _useState10 = _slicedToArray(_useState9, 2),\n      disabled = _useState10[0],\n      setDisabled = _useState10[1];\n\n  var _useState11 = useState(new Set()),\n      _useState12 = _slicedToArray(_useState11, 2),\n      almost = _useState12[0],\n      setAlmost = _useState12[1];\n\n  var _useState13 = useState(new Set()),\n      _useState14 = _slicedToArray(_useState13, 2),\n      correct = _useState14[0],\n      setCorrect = _useState14[1];\n\n  var _useState15 = useState(new Set()),\n      _useState16 = _slicedToArray(_useState15, 2),\n      wordSet = _useState16[0],\n      setWordSet = _useState16[1];\n\n  var _useState17 = useState(0),\n      _useState18 = _slicedToArray(_useState17, 2),\n      game = _useState18[0],\n      setgame = _useState18[1];\n\n  var _useState19 = useState(0),\n      _useState20 = _slicedToArray(_useState19, 2),\n      bounce = _useState20[0],\n      setBounce = _useState20[1];\n\n  useEffect(function () {\n    get_randomWord().then(function (words) {\n      setWordSet(words.wordSet);\n      setWord(words.random_word.toUpperCase());\n      setBoard(words.DefaultBorad);\n      setDisabled(words.errorSet);\n      setAlmost(words.almostSet);\n      setCorrect(words.almostSet);\n    });\n  }, [game]);\n  useEffect(function () {\n    var newBoard = _toConsumableArray(board);\n\n    setBoard(newBoard);\n  }, [bounce]);\n\n  var onDelete = function onDelete(keyValue) {\n    //  This console.log is for testing:\n    console.log(word);\n\n    var newBoard = _toConsumableArray(board);\n\n    if (curAttempt.letterPos == 0) {\n      newBoard[curAttempt.attempt][curAttempt.letterPos] = \"\";\n      setCurrAttempt(_objectSpread({}, curAttempt, {\n        letterPos: curAttempt.letterPos\n      }));\n      setBoard(newBoard);\n    } else if (curAttempt.letterPos > 0 && curAttempt.letterPos <= 5) {\n      //Deleteing any other time\n      newBoard[curAttempt.attempt][curAttempt.letterPos - 1] = \"\";\n      setCurrAttempt(_objectSpread({}, curAttempt, {\n        letterPos: curAttempt.letterPos - 1\n      }));\n      setBoard(newBoard);\n    }\n  };\n\n  var onEnter = function onEnter(keyValue) {\n    var newBoard = _toConsumableArray(board);\n\n    if (curAttempt.letterPos != 5) {\n      // Not a complete word\n      return;\n    } else if (curAttempt.letterPos == 5) {\n      // Makeing a guess\n      if (!wordSet.has(newBoard[curAttempt.attempt].join(\"\").valueOf().toLowerCase())) {\n        alert(\"Not a word\");\n        return;\n      }\n\n      setCurrAttempt({\n        attempt: curAttempt.attempt + 1,\n        letterPos: 0\n      });\n      onCheck();\n      return; // need to check the guess \n    } else {\n      return;\n    }\n  };\n\n  var onSelectLetter = function onSelectLetter(keyValue) {\n    var newBoard = _toConsumableArray(board);\n\n    if (curAttempt.letterPos >= 0 && curAttempt.letterPos <= 4) {\n      setCurrAttempt(_objectSpread({}, curAttempt, {\n        letterPos: curAttempt.letterPos + 1\n      }));\n      newBoard[curAttempt.attempt][curAttempt.letterPos] = keyValue;\n      setBoard(newBoard);\n      return;\n    }\n  };\n\n  var new_game = function new_game() {\n    var newBoard = _toConsumableArray(board);\n\n    setCorrect(new Set());\n    setDisabled(new Set());\n    setAlmost(new Set());\n    setBoard(newBoard);\n    setCurrAttempt({\n      attempt: 0,\n      letterPos: 0\n    });\n    setWord(wordSet[Math.floor(Math.random() * wordSet.length)]);\n    setgame(game + 1);\n    setBounce(false);\n  };\n\n  var onCheck = function onCheck() {\n    var newBoard = _toConsumableArray(board);\n\n    if (newBoard[curAttempt.attempt].join(\"\").valueOf() === word.valueOf()) {\n      setBounce(true);\n    } else if (newBoard[curAttempt.attempt].join(\"\").valueOf() !== word.valueOf() && curAttempt.attempt == 5) {\n      alert(\"You lost! The word was: \" + word);\n      setCorrect(new Set());\n      setDisabled(new Set());\n      setAlmost(new Set());\n      setBoard(newBoard);\n      setCurrAttempt({\n        attempt: 0,\n        letterPos: 0\n      });\n      setWord(wordSet[Math.floor(Math.random() * wordSet.length)]);\n      setgame(game + 1);\n    } else {\n      ///\n      var i;\n\n      var _newBoard = _toConsumableArray(board);\n\n      var guess1 = _newBoard[curAttempt.attempt].join(\"\").valueOf();\n\n      var check_word = word;\n      debugger;\n\n      for (i = 0; i < 5; i++) {\n        if (guess1[i] === check_word[i]) {\n          console.log(guess1[i], check_word[i]);\n          setCorrect(correct.add(guess1[i]));\n        } else if (check_word.includes(guess1[i]) && guess1[i] !== check_word[i]) {\n          console.log(guess1[i], check_word[i]);\n          setAlmost(almost.add(guess1[i]));\n        } else {\n          setDisabled(disabled.add(guess1[i]));\n        }\n\n        console.log(check_word);\n      }\n    }\n\n    console.log(\"disable\");\n    console.log(disabled);\n    console.log(\"correct\");\n    console.log(correct);\n    console.log(\"almost\");\n    console.log(almost);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 16\n    }\n  }, \"Dordle\")), /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      board: board,\n      setBoard: setBoard,\n      curAttempt: curAttempt,\n      setCurrAttempt: setCurrAttempt,\n      word: word,\n      setWord: setWord,\n      disabled: disabled,\n      setDisabled: setDisabled,\n      correct: correct,\n      setCorrect: setCorrect,\n      onDelete: onDelete,\n      onEnter: onEnter,\n      onSelectLetter: onSelectLetter,\n      onCheck: onCheck,\n      almost: almost,\n      setAlmost: setAlmost,\n      bounce: bounce,\n      new_game: new_game\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Board, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Keyboard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setguess(guessing(guess));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, guess)));\n}\n\nexport default App;","map":{"version":3,"names":["Board","React","useState","createContext","useEffect","Keyboard","DefaultBorad","guessing","get_randomWord","AppContext","App","guess","setguess","board","setBoard","attempt","letterPos","curAttempt","setCurrAttempt","word","setWord","Set","disabled","setDisabled","almost","setAlmost","correct","setCorrect","wordSet","setWordSet","game","setgame","bounce","setBounce","then","words","random_word","toUpperCase","errorSet","almostSet","newBoard","onDelete","keyValue","console","log","onEnter","has","join","valueOf","toLowerCase","alert","onCheck","onSelectLetter","new_game","Math","floor","random","length","i","guess1","check_word","add","includes"],"sources":["/Users/magana272/Desktop/pp/wordle/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport Board from \"./Component/Board\";\nimport React, { useState, createContext, useEffect } from 'react';\nimport Keyboard from \"./Component/KeyBoard\";\nimport {DefaultBorad, guessing, get_randomWord } from \"./Word\"\nexport const AppContext = createContext();\nfunction App() {\n  const [guess, setguess] = useState(\"xxxxx\");\n  const [board, setBoard] = useState(DefaultBorad);\n  const [curAttempt, setCurrAttempt] = useState({attempt:0 ,letterPos :0})\n  const [word, setWord] = useState(\"\");\n  const [disabled, setDisabled] = useState(new Set());\n  const [almost, setAlmost] = useState(new Set());\n  const [correct, setCorrect] = useState(new Set());\n  const [wordSet, setWordSet] = useState(new Set());\n  const [game, setgame] = useState(0);\n  const [bounce, setBounce] = useState(0);\n\n\n  useEffect(() => {\n    get_randomWord().then((words)=> {\n      setWordSet(words.wordSet)\n      setWord(words.random_word.toUpperCase())\n      setBoard(words.DefaultBorad);\n      setDisabled(words.errorSet);\n      setAlmost(words.almostSet);\n      setCorrect(words.almostSet);\n\n    }\n    )\n  }, [game])\n  useEffect(() => {\n    const newBoard = [...board]\n    setBoard(newBoard)\n\n    }, [bounce])\n  const onDelete = (keyValue) =>{\n    //  This console.log is for testing:\n    console.log(word) \n    const newBoard = [...board]\n    if(curAttempt.letterPos ==0 ){\n      newBoard[curAttempt.attempt][curAttempt.letterPos] = \"\"\n      setCurrAttempt({...curAttempt, letterPos:curAttempt.letterPos});\n      setBoard(newBoard);}\n    else if(curAttempt.letterPos >0 && curAttempt.letterPos <=5){\n      //Deleteing any other time\n      newBoard[curAttempt.attempt][curAttempt.letterPos-1] = \"\"\n      setCurrAttempt({...curAttempt, letterPos:curAttempt.letterPos-1});\n      setBoard(newBoard);\n      }\n      }\n  const onEnter = (keyValue) => {\n    const newBoard = [...board];\n    if(curAttempt.letterPos!=5){\n      // Not a complete word\n      return;\n    }\n    else if(curAttempt.letterPos==5){\n      // Makeing a guess\n      if(!wordSet.has(newBoard[curAttempt.attempt].join(\"\").valueOf().toLowerCase())){alert(\"Not a word\");return;}\n      setCurrAttempt({attempt: curAttempt.attempt+1, letterPos:0});\n      onCheck();\n      return;\n      // need to check the guess \n    }\n    else{\n      return;\n    }\n  }\n  const onSelectLetter = (keyValue) =>{\n    const newBoard = [...board]\n    if(curAttempt.letterPos >=0 && curAttempt.letterPos <=4){\n      setCurrAttempt({...curAttempt, letterPos:curAttempt.letterPos+1})\n      newBoard[curAttempt.attempt][curAttempt.letterPos] = keyValue;\n      setBoard(newBoard)\n      return;\n  }}\n  const new_game =()=>{\n    const newBoard = [...board]\n    setCorrect(new Set())\n    setDisabled(new Set())\n    setAlmost(new Set())\n    setBoard(newBoard);\n    setCurrAttempt({attempt:0 ,letterPos:0 })\n    setWord(wordSet[Math.floor(Math.random() * wordSet.length)]);\n    setgame(game+1)\n    setBounce(false);\n  }\n\n  const onCheck = () =>{\n    const newBoard = [...board]\n    if(newBoard[curAttempt.attempt].join(\"\").valueOf() === word.valueOf()){\n      setBounce(true)\n\n    }\n    else if(newBoard[curAttempt.attempt].join(\"\").valueOf() !== word.valueOf() && curAttempt.attempt ==5){\n      alert(\"You lost! The word was: \" + word);\n      setCorrect(new Set())\n      setDisabled(new Set())\n      setAlmost(new Set())\n      setBoard(newBoard);\n      setCurrAttempt({attempt:0 ,letterPos:0 })\n      setWord(wordSet[Math.floor(Math.random() * wordSet.length)]);\n      setgame(game+1)\n\n    }\n    else{\n      ///\n      let i;\n      const newBoard = [...board]\n      let guess1 = newBoard[curAttempt.attempt].join(\"\").valueOf();\n      let check_word = word;\n      debugger;\n      for(i=0; i <5; i++ ){\n        if(guess1[i] === check_word[i]) {\n          console.log(guess1[i], check_word[i])\n          setCorrect(correct.add(guess1[i]));\n        }\n        else if ((check_word.includes(guess1[i]) )&& (guess1[i] !== check_word[i] )){\n          console.log(guess1[i], check_word[i])\n          setAlmost(almost.add(guess1[i]))\n          }\n       else{\n        setDisabled(disabled.add(guess1[i]))\n       }\n       console.log(check_word)\n      }\n      }\n    console.log(\"disable\")\n    console.log(disabled)\n    console.log(\"correct\")\n    console.log(correct)\n    console.log(\"almost\")\n    console.log(almost)\n    }\n\n  return (\n      <div className=\"App\">\n      <div className = \"container-fluid\"> \n          <nav><h1>Dordle</h1></nav>\n          <AppContext.Provider value ={{board, setBoard, curAttempt, setCurrAttempt, word, setWord,disabled, setDisabled,correct,setCorrect, onDelete, onEnter, onSelectLetter, onCheck, almost, setAlmost, bounce, new_game}} >\n            <div className = \"col\"> \n            <div className = \"container-fluid\"> \n              <div className =\"game\">\n                <div className = \"row justify-content-center\"> \n                <div className = \"container-fluid\"> \n                  <Board/>\n                </div>\n                </div>\n                <div className = \"row justify-content-center\"> \n                <div className = \"container-fluid\">\n                  <Keyboard/>\n                  </div>\n                </div>\n              </div>\n              </div>\n            </div>\n          </AppContext.Provider>\n          <button onClick={()=>setguess(guessing(guess))} >{guess}</button>\n\n      </div>\n      \n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}