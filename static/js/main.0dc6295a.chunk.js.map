{"version":3,"sources":["Component/Letter.js","Component/Board.js","Component/Key.js","Component/KeyBoard.js","Word.js","App.js","reportWebVitals.js","index.js","word.txt"],"names":["Letter","_ref","letterPos","attemptValue","_useContext","useContext","AppContext","board","curAttempt","word","bounce","disabled","setDisabled","correct","setCorrect","almost","setAlmost","new_game","letter","animated","document","getElementById","addEventListener","attempt","react_default","a","createElement","className","id","style","animationDelay","includes","Board","Component_Letter","Key","keyValue","bigKey","onEnter","onDelete","onSelectLetter","almostSet","selector","toUpperCase","has","onClick","KeyBoard","error","top_keys","mid_keys","low_keys","handleKeyBoard","useCallback","event","key","forEach","useEffect","removeEventListener","onKeyDown","map","Component_Key","DefaultBorad","get_randomWord","Object","asyncToGenerator","_regeneratorRuntime","mark","_callee","wordSet","random_word","correctSet","errorSet","wrap","_context","prev","next","fetch","Words","then","response","text","results","wordarr","split","Math","floor","random","length","Set","abrupt","stop","apply","this","arguments","createContext","App","_useState","useState","_useState2","slicedToArray","guess","setguess","_useState3","_useState4","setBoard","_useState5","_useState6","setCurrAttempt","_useState7","_useState8","setWord","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","setWordSet","_useState15","_useState16","game","setgame","_useState17","_useState18","_useState19","_useState20","setBounce","words","newBoard","toConsumableArray","onCheck","join","valueOf","alert","i","guess1","check_word","add","Provider","value","console","log","objectSpread","toLowerCase","Component_Board","Component_KeyBoard","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App","module","exports","p"],"mappings":"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","file":"static/js/main.0dc6295a.chunk.js","sourcesContent":["import React, {useContext, useEffect} from 'react';\nimport {AppContext} from \"../App\";\nfunction Letter({letterPos, attemptValue}){\n    const {board, curAttempt, word,disabled, setDisabled,correct,setCorrect, almost, setAlmost, bounce, new_game} = useContext(AppContext); \n    const letter = board[attemptValue][letterPos];\n    // Make tupils if you get it right ... :+)\n    // ALL 5 letter words from Taylor Swift song and Say Anything \n\n    const animated = document.getElementById('end');\n    if(animated){\n    animated.addEventListener('animationend', () => {\n        new_game();\n      });\n    }\n    if ((bounce) && attemptValue == curAttempt.attempt-1){\n        if(letterPos == 4){\n            return <div className =\"letter\" id= \"end\"  style= {{animationDelay: letterPos*100+ \"ms\"}}> {letter}</div>\n\n        }\n        return <div className =\"letter\" id= \"correct_bounce\"  style= {{animationDelay: letterPos*100+ \"ms\"}}> {letter}</div>\n    }\n    else if (attemptValue < curAttempt.attempt || (bounce && attemptValue === curAttempt.attempt)){\n        if(word[letterPos]===letter){\n            return <div className =\"letter\" id= \"correct_b\"> {letter}</div>\n        }\n        else if(word.includes(\"\"+letter)){\n            return <div className =\"letter\" id= \"almost\"> {letter}</div>\n        }\n        else{\n            return <div className =\"letter\" id= \"error\" > {letter}</div>\n        }\n    }\n    else {return <div className =\"p-2 flex-shrink-1 letter\" id> {letter}</div>}\n\n}\nexport default Letter;","import React,{useState} from 'react';\nimport Letter from \"./Letter\"\nfunction Board(){\n    return (<div className=\"container\" id = \"board\">\n            <div className = \"d-flex\">\n                <Letter letterPos = \"0\" attemptValue = \"0\" />\n                <Letter letterPos = \"1\" attemptValue = \"0\"/>\n                <Letter letterPos = \"2\" attemptValue = \"0\"/>\n                <Letter letterPos = \"3\" attemptValue = \"0\"/>\n                <Letter letterPos = \"4\" attemptValue = \"0\"/>\n            </div>\n            <div className = \"d-flex\">\n                <Letter letterPos = \"0\" attemptValue = \"1\"/>\n                <Letter letterPos = \"1\" attemptValue = \"1\"/>\n                <Letter letterPos = \"2\" attemptValue = \"1\"/>\n                <Letter letterPos = \"3\" attemptValue = \"1\"/>\n                <Letter letterPos = \"4\" attemptValue = \"1\"/>\n            </div>\n            <div className = \"d-flex\">\n                <Letter letterPos = \"0\" attemptValue = \"2\"/>\n                <Letter letterPos = \"1\" attemptValue = \"2\"/>\n                <Letter letterPos = \"2\" attemptValue = \"2\"/>\n                <Letter letterPos = \"3\" attemptValue = \"2\"/>\n                <Letter letterPos = \"4\" attemptValue = \"2\"/>\n\n            </div>\n            <div className = \"d-flex\">\n                <Letter letterPos = \"0\" attemptValue = \"3\"/>\n                <Letter letterPos = \"1\" attemptValue = \"3\"/>\n                <Letter letterPos = \"2\" attemptValue = \"3\"/>\n                <Letter letterPos = \"3\" attemptValue = \"3\"/>\n                <Letter letterPos = \"4\" attemptValue = \"3\"/>\n\n            </div>\n            <div className = \"d-flex\">\n                <Letter letterPos = \"0\" attemptValue = \"4\"/>\n                <Letter letterPos = \"1\" attemptValue = \"4\"/>\n                <Letter letterPos = \"2\" attemptValue = \"4\"/>\n                <Letter letterPos = \"3\" attemptValue = \"4\"/>\n                <Letter letterPos = \"4\" attemptValue = \"4\"/>\n\n            </div>\n            <div className = \"d-flex\">\n                <Letter letterPos = \"0\" attemptValue = \"5\"/>\n                <Letter letterPos = \"1\" attemptValue = \"5\"/>\n                <Letter letterPos = \"2\" attemptValue = \"5\"/>\n                <Letter letterPos = \"3\" attemptValue = \"5\"/>\n                <Letter letterPos = \"4\" attemptValue = \"5\"/>\n            </div>\n            </div>)\n}\nexport default Board;","import React, {useContext} from \"react\";\nimport {AppContext} from \"../App\"\nfunction Key({keyValue, bigKey}){\n\n    const {onEnter, onDelete, onSelectLetter,disabled,correct, almostSet} = useContext(AppContext);\n    \n    const selector  = () =>{\n        if (keyValue.toUpperCase() == \"DELETE\"){\n            ///Try to delete at 0\n            onDelete()\n            return;\n        }\n        else if(keyValue.toUpperCase() === \"ENTER\" )\n        { onEnter(keyValue)\n            return;}\n        else{onSelectLetter(keyValue)\n            return;}\n    }\n\n    if(correct.has(keyValue)){\n        return <button className= \"p-2 flex-shrink key\" id = {(bigKey && \"big\" ) || (\"correct\")} onClick={selector}>{keyValue}</button>\n\n    }\n    if (almostSet.has(keyValue) ){\n        return <button className= \"p-2 flex-shrink key\" id = {(bigKey && \"big\" ) || (\"correct\")} onClick={selector}>{keyValue}</button>\n\n    }\n    else if (disabled.has(keyValue) && !almostSet.has(keyValue) && !correct.has(keyValue)){\n\n        return <button className= \"p-2 flex-shrink key\" id = {(bigKey && \"big\" ) || (\"error\")} onClick={selector}>{keyValue}</button>\n\n    }\n    else {return <button className= \"p-2 flex-shrink key\" id = {bigKey && \"big\"} onClick={selector}>{keyValue}</button>\n}\n    }\nexport default Key;","import React, {useEffect, useCallback, useContext}from 'react';\nimport Key from \"./Key\"\nimport {AppContext} from \"../App\";\n\nfunction KeyBoard(){\n    const {board, curAttempt, word, almost, error, onEnter, onDelete, onSelectLetter,disabled, setDisabled,correct,setCorrect } = useContext(AppContext); \n    const top_keys = [\"Q\",\"W\",\"E\",\"R\",\"T\", \"Y\", \"U\", \"I\", \"O\", \"P\"]\n    const mid_keys = [\"A\",\"S\",\"D\",\"F\",\"G\",\"H\",\"J\",\"K\",\"L\"]\n    const low_keys = [\"Enter\",\"Z\",\"X\", \"C\", \"V\", \"B\", \"N\", \"M\", \"Delete\"]\n    const handleKeyBoard = useCallback(\n      (event) => {\n        if(event.key === \"Enter\"){\n            onEnter();\n        }\n        else if(event.key === \"Backspace\"){\n            onDelete();\n        }\n        else{\n            top_keys.forEach(key => {\n                if(event.key.toUpperCase() === key){\n                    onSelectLetter(key)\n                }\n                \n            });\n            mid_keys.forEach(key => {\n                if(event.key.toUpperCase() === key){\n                    onSelectLetter(key)\n                }\n                \n            });\n            low_keys.forEach(key => {\n                if(event.key.toUpperCase() === key){\n                    onSelectLetter(key)\n                }\n                \n            });\n        }\n      },\n    )\n    \n    useEffect(()=>{\n        document.addEventListener(\"keydown\",handleKeyBoard)\n        return () => document.removeEventListener(\"keydown\",handleKeyBoard)\n\n    },[handleKeyBoard])\n    return (\n        <div className= \"keyboard\" onKeyDown ={handleKeyBoard}>\n            <div className = \"d-flex justify-content-center\">{top_keys.map((key)=>{\n                return <Key keyValue = {key}/>\n                })}\n            </div>\n            <div className = \"d-flex justify-content-center\">{mid_keys.map((key)=>{\n                return <Key keyValue = {key}/>\n                })}\n            </div>\n            <div className = \"d-flex justify-content-center\">{low_keys.map((key)=>{\n                if (key === \"Enter\" || key === \"Delete\"){\n                    return <Key keyValue = {key} bigKey/>\n                }\n                return <Key keyValue = {key}/>\n                })}\n            </div>\n    </div>\n       )\n}\nexport default KeyBoard;","import React from 'react'\nimport Words from './word.txt'\nexport const DefaultBorad = [\n    [\" \",\"\",\"\",\"\",\"\"],\n    [\"\",\"\",\"\",\"\",\"\"],\n    [\"\",\"\",\"\",\"\",\"\"],\n    [\"\",\"\",\"\",\"\",\"\"],\n    [\"\",\"\",\"\",\"\",\"\"],\n    [\"\",\"\",\"\",\"\",\"\"]];\n\nexport function guessFunc(guess, correct_word){\n    let guess_answer = [];\n    for( let i = 0 ; 0 < correct_word.length; i++){\n        if (guess[i]===correct_word[i]){\n            guess_answer.push(1)\n        }\n        else if(guess.includes(guess[i])){\n            guess_answer.push(2);\n        }\n        else{\n            guess.push(2);\n        }\n    }\n    return guess_answer\n}\nexport function guessing(word){\n    if (word === \"xxxxx\"){\n      return \"Daisy. - Your Bug 🌷\"}\n    return \"xxxxx\";\n  }\nexport const get_randomWord = async()=>{\n    let wordSet;\n    let random_word;\n    let DefaultBorad;\n    let correctSet;\n    let errorSet;\n    let almostSet;\n    await fetch(Words)\n    .then((response)=> response.text())\n    .then((results)=>{\n        const wordarr = results.split(\"\\n\")\n        random_word = wordarr[Math.floor(Math.random() * wordarr.length)]\n        wordSet = new Set(wordarr)\n        DefaultBorad = [\n            [\" \",\"\",\"\",\"\",\"\"],\n            [\"\",\"\",\"\",\"\",\"\"],\n            [\"\",\"\",\"\",\"\",\"\"],\n            [\"\",\"\",\"\",\"\",\"\"],\n            [\"\",\"\",\"\",\"\",\"\"],\n            [\"\",\"\",\"\",\"\",\"\"]];\n        correctSet =  new Set();\n        errorSet = new Set();\n        almostSet = new Set();\n\n    })\n    return {wordSet, random_word,DefaultBorad, correctSet, errorSet, almostSet};\n}\n","import './App.css';\nimport Board from \"./Component/Board\";\nimport React, { useState, createContext, useEffect } from 'react';\nimport Keyboard from \"./Component/KeyBoard\";\nimport {DefaultBorad, guessing, get_randomWord } from \"./Word\"\nexport const AppContext = createContext();\nfunction App() {\n  const [guess, setguess] = useState(\"xxxxx\");\n  const [board, setBoard] = useState(DefaultBorad);\n  const [curAttempt, setCurrAttempt] = useState({attempt:0 ,letterPos :0})\n  const [word, setWord] = useState(\"\");\n  const [disabled, setDisabled] = useState(new Set());\n  \n  const [correct, setCorrect] = useState(new Set());\n  const [wordSet, setWordSet] = useState(new Set());\n  const [game, setgame] = useState(0);\n  const [almostSet, setAlmost] = useState(new Set());\n  const [bounce, setBounce] = useState(0);\n\n\n  useEffect(() => {\n    get_randomWord().then((words)=> {\n      setWordSet(words.wordSet)\n      setWord(words.random_word.toUpperCase())\n      setBoard(words.DefaultBorad);\n      setDisabled(words.errorSet);\n      setAlmost(words.almostSet);\n      setCorrect(words.almostSet);\n\n    }\n    )\n  }, [game])\n  useEffect(() => {\n    const newBoard = [...board]\n    setBoard(newBoard)\n\n    }, [bounce])\n  const onDelete = (keyValue) =>{\n    //  This console.log is for testing:\n    console.log(word) \n    const newBoard = [...board]\n    if(curAttempt.letterPos ==0 ){\n      newBoard[curAttempt.attempt][curAttempt.letterPos] = \"\"\n      setCurrAttempt({...curAttempt, letterPos:curAttempt.letterPos});\n      setBoard(newBoard);}\n    else if(curAttempt.letterPos >0 && curAttempt.letterPos <=5){\n      //Deleteing any other time\n      newBoard[curAttempt.attempt][curAttempt.letterPos-1] = \"\"\n      setCurrAttempt({...curAttempt, letterPos:curAttempt.letterPos-1});\n      setBoard(newBoard);\n      }\n      }\n  const onEnter = (keyValue) => {\n    const newBoard = [...board];\n    if(curAttempt.letterPos!=5){\n      // Not a complete word\n      return;\n    }\n    else if(curAttempt.letterPos==5){\n      // Makeing a guess\n      if(!wordSet.has(newBoard[curAttempt.attempt].join(\"\").valueOf().toLowerCase())){alert(\"Not a word\");return;}\n      setCurrAttempt({attempt: curAttempt.attempt+1, letterPos:0});\n      onCheck();\n      return;\n      // need to check the guess \n    }\n    else{\n      return;\n    }\n  }\n  const onSelectLetter = (keyValue) =>{\n    const newBoard = [...board]\n    if(curAttempt.letterPos >=0 && curAttempt.letterPos <=4){\n      setCurrAttempt({...curAttempt, letterPos:curAttempt.letterPos+1})\n      newBoard[curAttempt.attempt][curAttempt.letterPos] = keyValue;\n      setBoard(newBoard)\n      return;\n  }}\n  const new_game =()=>{\n    const newBoard = [...board]\n    setCorrect(new Set())\n    setDisabled(new Set())\n    setAlmost(new Set())\n    setBoard(newBoard);\n    setCurrAttempt({attempt:0 ,letterPos:0 })\n    setWord(wordSet[Math.floor(Math.random() * wordSet.length)]);\n    setgame(game+1)\n    setBounce(false);\n  }\n\n  const onCheck = () =>{\n    const newBoard = [...board]\n    if(newBoard[curAttempt.attempt].join(\"\").valueOf() === word.valueOf()){\n      setBounce(true)\n\n    }\n    else if(newBoard[curAttempt.attempt].join(\"\").valueOf() !== word.valueOf() && curAttempt.attempt ==5){\n      alert(\"You lost! The word was: \" + word);\n      setCorrect(new Set())\n      setDisabled(new Set())\n      setAlmost(new Set())\n      setBoard(newBoard);\n      setCurrAttempt({attempt:0 ,letterPos:0 })\n      setWord(wordSet[Math.floor(Math.random() * wordSet.length)]);\n      setgame(game+1)\n\n    }\n    else{\n      ///\n      let i;\n      const newBoard = [...board]\n      let guess1 = newBoard[curAttempt.attempt].join(\"\").valueOf();\n      let check_word = word;\n      // debugger;\n      for(i=0; i <5; i++ ){\n        if(guess1[i] === check_word[i]) {\n          setCorrect(correct.add(guess1[i]));\n        }\n       else{\n        setDisabled(disabled.add(guess1[i]))\n       }\n      }\n      }\n\n    }\n\n  return (\n      <div className=\"App\">\n      <div className = \"container-fluid\"> \n          <nav><h1>🌷Dordle🌷</h1></nav>\n          <AppContext.Provider value ={{board, setBoard, curAttempt, setCurrAttempt, word, setWord,disabled, setDisabled,correct,setCorrect, onDelete, onEnter, onSelectLetter, onCheck, almostSet, setAlmost, bounce, new_game}} >\n            <div className = \"col\"> \n            <div className = \"container-fluid\"> \n              <div className =\"game\">\n                <div className = \"row justify-content-center\"> \n                <div className = \"container-fluid\"> \n                  <Board/>\n                </div>\n                </div>\n                <div className = \"row justify-content-center\"> \n                <div className = \"container-fluid\">\n                  <Keyboard/>\n                  </div>\n                </div>\n              </div>\n              </div>\n            </div>\n          </AppContext.Provider>\n          <button onClick={()=>setguess(guessing(guess))} >{guess}</button>\n\n      </div>\n      \n    </div>\n  );\n}\nexport default App;\n","import React from 'react'\nconst reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/word.2ba2eb9e.txt\";"],"sourceRoot":""}