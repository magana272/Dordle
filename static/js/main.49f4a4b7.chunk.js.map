{"version":3,"sources":["Component/Letter.js","Component/Board.js","Component/Key.js","Component/KeyBoard.js","Word.js","App.js","reportWebVitals.js","index.js"],"names":["Letter","_ref","letterPos","attemptValue","_useContext","useContext","AppContext","board","curAttempt","word","letter","correct","almost","error","attempt","react_default","a","createElement","className","id","includes","Board","Component_Letter","Key","keyValue","bigKey","onEnter","setBoard","setCurrAttempt","onDelete","onSelectLetter","onClick","toUpperCase","KeyBoard","top_keys","mid_keys","low_keys","handleKeyBoard","useCallback","event","key","forEach","useEffect","document","addEventListener","removeEventListener","onKeyDown","map","Component_Key","DefaultBorad","createContext","App","_useState","useState","_useState2","Object","slicedToArray","guess","setguess","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","setWord","onCheck","toConsumableArray","join","valueOf","alert","Provider","value","newBoard","objectSpread","Component_Board","Component_KeyBoard","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.49f4a4b7.chunk.js","sourcesContent":["import React, {useContext} from 'react';\nimport {AppContext} from \"../App\";\nfunction Letter({letterPos, attemptValue}){\n    const {board, curAttempt, word, correct, almost, error} = useContext(AppContext); \n    const letter = board[attemptValue][letterPos];\n    // Make tupils if you get it right ... :+)\n    // ALL 5 letter words from Taylor Swift song and Say Anything \n\n    if(attemptValue < curAttempt.attempt){\n        if(word.word[letterPos]===letter){\n            return <div className =\"letter\" id= \"correct\"> {\"ðŸŒ·\"}</div>\n        }\n        else if(word.word.includes(\"\"+letter)){\n            return <div className =\"letter\" id= \"almost\"> {letter}</div>\n        }\n        else{\n            return <div className =\"letter\" id= \"error\"> {letter}</div>\n        }\n    }\n    return <div className =\"p-2 flex-shrink-1 letter\" id> {letter}</div>\n\n}\nexport default Letter;","import React,{useState} from 'react';\nimport Letter from \"./Letter\"\nfunction Board(){\n    return (<div className=\"container\" id = \"board\">\n            <div className = \"d-flex\">\n                <Letter letterPos = \"0\" attemptValue = \"0\" />\n                <Letter letterPos = \"1\" attemptValue = \"0\"/>\n                <Letter letterPos = \"2\" attemptValue = \"0\"/>\n                <Letter letterPos = \"3\" attemptValue = \"0\"/>\n                <Letter letterPos = \"4\" attemptValue = \"0\"/>\n            </div>\n            <div className = \"d-flex\">\n                <Letter letterPos = \"0\" attemptValue = \"1\"/>\n                <Letter letterPos = \"1\" attemptValue = \"1\"/>\n                <Letter letterPos = \"2\" attemptValue = \"1\"/>\n                <Letter letterPos = \"3\" attemptValue = \"1\"/>\n                <Letter letterPos = \"4\" attemptValue = \"1\"/>\n            </div>\n            <div className = \"d-flex\">\n                <Letter letterPos = \"0\" attemptValue = \"2\"/>\n                <Letter letterPos = \"1\" attemptValue = \"2\"/>\n                <Letter letterPos = \"2\" attemptValue = \"2\"/>\n                <Letter letterPos = \"3\" attemptValue = \"2\"/>\n                <Letter letterPos = \"4\" attemptValue = \"2\"/>\n\n            </div>\n            <div className = \"d-flex\">\n                <Letter letterPos = \"0\" attemptValue = \"3\"/>\n                <Letter letterPos = \"1\" attemptValue = \"3\"/>\n                <Letter letterPos = \"2\" attemptValue = \"3\"/>\n                <Letter letterPos = \"3\" attemptValue = \"3\"/>\n                <Letter letterPos = \"4\" attemptValue = \"3\"/>\n\n            </div>\n            <div className = \"d-flex\">\n                <Letter letterPos = \"0\" attemptValue = \"4\"/>\n                <Letter letterPos = \"1\" attemptValue = \"4\"/>\n                <Letter letterPos = \"2\" attemptValue = \"4\"/>\n                <Letter letterPos = \"3\" attemptValue = \"4\"/>\n                <Letter letterPos = \"4\" attemptValue = \"4\"/>\n\n            </div>\n            <div className = \"d-flex\">\n                <Letter letterPos = \"0\" attemptValue = \"5\"/>\n                <Letter letterPos = \"1\" attemptValue = \"5\"/>\n                <Letter letterPos = \"2\" attemptValue = \"5\"/>\n                <Letter letterPos = \"3\" attemptValue = \"5\"/>\n                <Letter letterPos = \"4\" attemptValue = \"5\"/>\n            </div>\n            </div>)\n}\nexport default Board;","import React, {useContext} from \"react\";\nimport {AppContext} from \"../App\"\nfunction Key({keyValue, bigKey}){\n\n    const {board, setBoard, curAttempt,setCurrAttempt, word, correct, almost, error, onEnter, onDelete, onSelectLetter} = useContext(AppContext);\n    \n    const selector  = () =>{\n        if (keyValue.toUpperCase() == \"DELETE\"){\n            ///Try to delete at 0\n            onDelete()\n            return;\n        }\n        else if(keyValue.toUpperCase() === \"ENTER\" )\n        { onEnter(keyValue)\n            return;}\n        else{onSelectLetter(keyValue)\n            return;}\n    }\n    ///\n    return <button className= \"p-2 flex-shrink key\" id = {bigKey && \"big\"} onClick={selector}>{keyValue}</button>\n    }\nexport default Key;","import React, {useEffect, useCallback, useContext}from 'react';\nimport Key from \"./Key\"\nimport {AppContext} from \"../App\";\n\nfunction KeyBoard(){\n    const {board, curAttempt, word, correct, almost, error, onEnter, onDelete, onSelectLetter} = useContext(AppContext); \n    const top_keys = [\"Q\",\"W\",\"E\",\"R\",\"T\", \"Y\", \"U\", \"I\", \"O\", \"P\"]\n    const mid_keys = [\"A\",\"S\",\"D\",\"F\",\"G\",\"H\",\"J\",\"K\",\"L\"]\n    const low_keys = [\"Enter\",\"Z\",\"X\", \"C\", \"V\", \"B\", \"N\", \"M\", \"Delete\"]\n    const handleKeyBoard = useCallback(\n      (event) => {\n        if(event.key === \"Enter\"){\n            onEnter();\n        }\n        else if(event.key === \"Backspace\"){\n            onDelete();\n        }\n        else{\n            top_keys.forEach(key => {\n                if(event.key.toUpperCase() === key){\n                    onSelectLetter(key)\n                }\n                \n            });\n            mid_keys.forEach(key => {\n                if(event.key.toUpperCase() === key){\n                    onSelectLetter(key)\n                }\n                \n            });\n            low_keys.forEach(key => {\n                if(event.key.toUpperCase() === key){\n                    onSelectLetter(key)\n                }\n                \n            });\n        }\n      },\n    )\n    \n    useEffect(()=>{\n        document.addEventListener(\"keydown\",handleKeyBoard)\n        return () => document.removeEventListener(\"keydown\",handleKeyBoard)\n\n    },[handleKeyBoard])\n    return (\n        <div className= \"keyboard\" onKeyDown ={handleKeyBoard}>\n            <div className = \"d-flex justify-content-center\">{top_keys.map((key)=>{\n                return <Key keyValue = {key}/>\n                })}\n            </div>\n            <div className = \"d-flex justify-content-center\">{mid_keys.map((key)=>{\n                return <Key keyValue = {key}/>\n                })}\n            </div>\n            <div className = \"d-flex justify-content-center\">{low_keys.map((key)=>{\n                if (key === \"Enter\" || key === \"Delete\"){\n                    return <Key keyValue = {key} bigKey/>\n                }\n                return <Key keyValue = {key}/>\n                })}\n            </div>\n    </div>\n       )\n}\nexport default KeyBoard;","import React from 'react'\nexport const DefaultBorad = [\n    [\" \",\"\",\"\",\"\",\"\"],\n    [\"\",\"\",\"\",\"\",\"\"],\n    [\"\",\"\",\"\",\"\",\"\"],\n    [\"\",\"\",\"\",\"\",\"\"],\n    [\"\",\"\",\"\",\"\",\"\"],\n    [\"\",\"\",\"\",\"\",\"\"]];\n\nexport function guessFunc(guess, correct_word){\n    let guess_answer = [];\n    for( let i = 0 ; 0 < correct_word.length; i++){\n        if (guess[i]===correct_word[i]){\n            guess_answer.push(1)\n        }\n        else if(guess.includes(guess[i])){\n            guess_answer.push(2);\n        }\n        else{\n            guess.push(2);\n        }\n    }\n    return guess_answer\n}\nexport function guessing(word){\n    if (word === \"xxxxx\"){\n      return \"Daisy. -Your Bug ðŸŒ·\"}\n    return \"xxxxx\";\n  }\n","import './App.css';\nimport Board from \"./Component/Board\";\nimport React, { useState, createContext } from 'react';\nimport Keyboard from \"./Component/KeyBoard\";\nimport {DefaultBorad, guessFunc, guessing} from \"./Word\"\nexport const AppContext = createContext();\nfunction App() {\n  const [guess, setguess] = useState(\"xxxxx\");\n  const [board, setBoard] = useState(DefaultBorad);\n  const [curAttempt, setCurrAttempt] = useState({attempt:0 ,letterPos :0})\n  const [word, setWord] = useState({word:\"DAISY\"});\n\n\n  const onDelete = (keyValue) =>{\n    const newBoard = [...board]\n    if(curAttempt.letterPos ==0 ){\n      newBoard[curAttempt.attempt][curAttempt.letterPos] = \"\"\n      setCurrAttempt({...curAttempt, letterPos:curAttempt.letterPos});\n      setBoard(newBoard);}\n    else if(curAttempt.letterPos >0 && curAttempt.letterPos <=5){\n      //Deleteing any other time\n      newBoard[curAttempt.attempt][curAttempt.letterPos-1] = \"\"\n      setCurrAttempt({...curAttempt, letterPos:curAttempt.letterPos-1});\n        setBoard(newBoard);\n      }\n      }\n  const onEnter = (keyValue) => {\n    const newBoard = [...board];\n    if(curAttempt.letterPos!=5){\n      // Not a complete word\n      return;\n    }\n    else if(curAttempt.letterPos==5){\n      // Makeing a guess\n      setCurrAttempt({attempt: curAttempt.attempt+1, letterPos:0});\n      setBoard(newBoard);\n      onCheck();\n      return;\n      // need to check the guess \n    }\n     else if (keyValue != \"Enter\" && curAttempt.letterPos==5){\n      // Fully Spelt Word\n      return;\n\n    }\n  }\n  const onSelectLetter = (keyValue) =>{\n    const newBoard = [...board]\n    if(curAttempt.letterPos >=0 && curAttempt.letterPos <=4){\n      setCurrAttempt({...curAttempt, letterPos:curAttempt.letterPos+1})\n      newBoard[curAttempt.attempt][curAttempt.letterPos] = keyValue;\n      setBoard(newBoard)\n      return;\n  }}\n  const onCheck = () =>{\n    const newBoard = [...board]\n    if(newBoard[curAttempt.attempt].join(\"\").valueOf() === word.word.valueOf()){\n      alert(\"YOU WIN!\")\n    }\n    \n  }\n  return (\n      <div className=\"App\">\n      <div className = \"container-fluid\"> \n          <nav><h1>Dordle</h1></nav>\n          <AppContext.Provider value ={{board, setBoard, curAttempt, setCurrAttempt, word, setWord, onDelete, onEnter, onSelectLetter, onCheck}} >\n            <div className = \"col\"> \n            <div className = \"container-fluid\"> \n              <div className =\"game\">\n                <div className = \"row justify-content-center\"> \n                <div className = \"container-fluid\"> \n                  <Board/>\n                </div>\n                </div>\n                <div className = \"row justify-content-center\"> \n                <div className = \"container-fluid\">\n                  <Keyboard/>\n                  </div>\n                </div>\n              </div>\n              </div>\n            </div>\n          </AppContext.Provider>\n          <button onClick={()=>setguess(guessing(guess))} >{guess}</button>\n\n      </div>\n      \n    </div>\n  );\n}\nexport default App;\n","import React from 'react'\nconst reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}